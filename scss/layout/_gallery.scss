// *** gallery *** //

@mixin gallery($key) {
  $columns: 1;
  $item-width-max: $content;

  // set up per-row, gallery-row
  @if type-of($key) == 'number' {
    $columns: $key;
  } @else if type-of($key) == 'list' {
    @each $item in $key {
      @if type-of($item) == 'number' {
        @if unitless($item) {
          $columns: $item;
        } @else {
          $item-width-max: $item;
        }
      }
    }
  }

  $px_width: ($item-width-max / $columns);
  $percent_width: percentage(1 / $columns);

  @extend %layout-base;

  > tbody > tr > td {
    @extend %layout-item-base;
    
    min-width: $px_width;
    width: $percent_width;
    min-width: -webkit-calc(#{$percent_width});
    min-width: calc(#{$percent_width});
    width: -webkit-calc(#{$item-width-max * $faciend} - #{100% * $faciend});
    width: calc(#{$item-width-max * $faciend} - #{100% * $faciend});
    max-width: 100%;
  }

  // constrict the images to container width
  img { max-width: $px_width; }
}


@if $generate-css {
  .gallery {
    @for $i from 2 through $gallery-cols {
      &-#{$i} {
        @include gallery($i center);
      }
    }
  }
}

@mixin gallery2($key) {
  $column-mobile: false;
  $column-desktop: false;
  $item-width-max: false;

  @if index($key, 'to') {
    $column-mobile: args-get-prev($key, 'to');
    $column-desktop: args-get-next($key, 'to');
  }
  @each $item in $key {
    @if not $item-width-max and type-of($item) == 'number' and not unitless($item) {
      $item-width-max: $item;
    }
  }
  
  // set default values
  @if not $item-width-max { $item-width-max: $content; }
  @if not $column-mobile { $column-mobile: 1; }
  @if not $column-desktop { $column-desktop: 2; }

  // get width
  $width-mobile: percentage(1 / $column-mobile);
  $width-desktop: percentage(1 / $column-desktop);

  @extend %layout-base;
  > tbody > tr > td {
    @extend %layout-item-base;

    // 1. For Lotus Notes, Outlook for Windows, Outlook Web App (both Office 365 and the new Outlook.com) and Yahoo (webmail, iOS and Android apps). They don't support calc.
    // 2. For older versions of Android (5.0-) and iOS (iOS7-)

    min-width: ($item-width-max / $column-desktop); // 1
    width: $width-desktop; // 1

    max-width: $width-mobile; // for mobile
    min-width: -webkit-calc(#{$width-desktop}); // 2
    min-width: calc(#{$width-desktop}); // for desktop
    width: -webkit-calc(#{$item-width-max * $faciend} - #{$width-mobile * $faciend}); // 2
    width: calc(#{$item-width-max * $faciend} - #{$width-mobile * $faciend}); // breakpoint magic
  }
}