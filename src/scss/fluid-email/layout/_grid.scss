// *** Grid *** //

// columns
.wrapper { 
  font-size: 0; // fix a space issue between inline-block elements
  &,
  & > tbody,
  & > tbody > tr { display: block; }
}

@mixin span($key){
  // merge list items
  @each $item in $key {
    @if type-of($item) == 'list' {
      $key: join($item, reject($key, $item), 'space');
    }
  }
  
  $columns: ro-get-next($key, 'of', $columns);
  $gutter: $gutter;
  $last: ro-get($key, 'last');

  // set up column
  $column: 0;
  @if type-of($key) == 'number' {
    $column: $key;
  } @else if type-of($key) == 'list' {
    @if index($key, 'of') {
      $column: ro-get-prev($key, 'of');
    } @else {
      @each $item in $key {
        @if type-of($item) == 'number' and
            unitless($item) {
          $column: $item;
        }
      }
    }
  }

  // set up gutter
  @each $item in $key {
    @if type-of($item) == 'number' and 
        not unitless($item) {
      $gutter: $item;
    }
  }
  // strip unit when gutter == 0
  @if strip-unit($gutter) == 0 {
    $gutter: 0;
  }
  
  $one-column: ((($container + $gutter) / $columns) - $gutter);

  // desktop, non-mediaquery
  @if $column < $columns {
    display: inline-block;
    font-size: 13px; // reset font-size
    padding-bottom: $gutter;
    width: ($one-column * $column + $gutter * ($column - 1));
    max-width: 100%;
    @if not $last { padding-right: $gutter; }
  }

  // desktop, mediaquery
  @include bp(min $container) {
    width: percentage(($one-column * $column + $gutter * ($column - 1)) / $container) !important;
    @if not $last { padding-right: percentage($gutter / $container) !important; }
  }

  // mediaquery
  @include bp(max ($container - 1px)) {
    padding-right: 0 !important; 
    width: 100% !important;
  }
}

// sub columns
@mixin sub-span($key){
  $columns: ro-get-next($key, 'of', $columns);

  // set up column
  $column: 0;
  @if type-of($key) == 'number' {
    $column: $key;
  } @else if type-of($key) == 'list' {
    @if index($key, 'of') {
      $column: ro-get-prev($key, 'of');
    } @else {
      @each $item in $key {
        @if type-of($item) == 'number' and
            unitless($item) {
          $column: $item;
        }
      }
    }
  }

  font-size: 13px; // reset font-size
  width: percentage($column / $columns);
}
