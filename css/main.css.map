{"version":3,"file":"main.css","sources":["main.scss","_fluid-email.scss","base/_variables.scss","base/_functions.scss","base/_placeholder.scss","addons/_breakpoint.scss","addons/_visible.scss","addons/_hidden.scss","addons/_type.scss","reset/_reset.scss","layout/_wrapper.scss","layout/_row.scss","layout/_col.scss","layout/_sub-col.scss","layout/_gallery.scss","components/_button.scss"],"sourcesContent":["// *** fluid email *** //\n@import \"fluid-email\";\n\n// *** main *** //\n\n\n\n\n\n\n\n@media only screen and (max-device-width: 480px) {\n  // A nice and clean way to target phone numbers you want clickable and avoid a mobile phone from linking other numbers that look like, but are not phone numbers.  Use these two blocks of code to \"unstyle\" any numbers that may be linked.  The second block gives you a class to apply with a span tag to the numbers you would like linked and styled.\n  // Inspired by Campaign Monitor's article on using phone numbers in email: http://www.campaignmonitor.com/blog/post/3571/using-phone-numbers-in-html-email/.\n  // a[href^=\"tel\"], a[href^=\"sms\"] {\n  //   text-decoration: none;\n  //   color: black; // or whatever your want\n  //   pointer-events: none;\n  //   cursor: default;\n  //   .mobile_link & {\n  //     text-decoration: default;\n  //     color: orange !important; // or whatever your want\n  //     pointer-events: auto;\n  //     cursor: default;\n  //   }\n  // }\n}\n// More Specific Targeting\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n  // ipad (tablets, smaller screens, etc)\n}\n@media only screen and (-webkit-min-device-pixel-ratio: 2) {\n  // Put your iPhone 4g styles in here //\n}\n// Following Android targeting from:\n// http://developer.android.com/guide/webapps/targeting.html\n// http://pugetworks.com/2011/04/css-media-queries-for-targeting-different-mobile-devices/ \n@media only screen and (-webkit-device-pixel-ratio:.75){\n  // Put CSS for low density (ldpi) Android layouts in here //\n}\n@media only screen and (-webkit-device-pixel-ratio:1){\n  // Put CSS for medium density (mdpi) Android layouts in here //\n}\n@media only screen and (-webkit-device-pixel-ratio:1.5){\n  // Put CSS for high density (hdpi) Android layouts in here //\n}\n","// *** fluid email *** //\n\n// base\n@import \"base/variables\";\n@import \"base/functions\";\n@import \"base/placeholder\";\n\n// addons\n@import \"addons/breakpoint\";\n@import \"addons/visible\";\n@import \"addons/hidden\";\n@import \"addons/type\";\n\n// reset\n@import \"reset/reset\";\n\n// layout\n@import \"layout/wrapper\";\n@import \"layout/row\";\n@import \"layout/col\";\n@import \"layout/sub-col\";\n@import \"layout/gallery\";\n\n// components\n@import \"components/button\";\n","// variables\n//-----------------------------\n\n// generate css\n$generate-css: true !default;\n$breakpoint-fix: true !default;\n\n// layout\n$wrapper: 600px !default;\n$content: 480px !default;\n$cols: 12 !default;\n$gutter: 16px !default;\n\n$gallery-cols: 6 !default;\n$gallery-align: left !default;\n\n$faciend: 1000;\n\n// font\n$helvetica: \"'Helvetica Neue', Helvetica, Arial, sans-serif\";\n$arial: \"Arial, Helvetica, sans-serif\";\n$opensans: \"'Open Sans', Arial, sans-serif\";\n$lato: \"'Lato', Arial, sans-serif\";\n$oswald: \"'Oswald', Arial, sans-serif\";\n$georgia: \"Georgia, 'Times New Roman', Times, Baskerville, serif\";\n\n// color\n$color: (\n  'border': #e6e6e6,\n  'brand': #41bae9,\n  'bg': #f1f1f1,\n  'link': #333,\n);\n\n// base\n$fe-em-base: 16px !default;\n$fe-rem-base: 16px !default;\n\n// breakpoint\n$ro-media-type: all, aural, braille, handheld, print, projection, screen, tty, tv, embossed !default;\n$ro-media-features: 'width', 'height' !default;\n\n// type\n$fe-font-weights: thin, hairline, extra light, ultra light, lighter, light, normal, medium, semi bold, demi bold, bold, bolder, extra bold, black, heavy, 100, 200, 300, 400, 500, 600, 700, 800, 900, weight-normal, weight-inherit !default;\n$fe-font-styles: italic, oblique, style-normal, style-inherit !default;\n$fe-text-aligns: left, right, center, justify, align-inherit !default;\n$fe-text-transforms: capitalize, uppercase, lowercase, none, full-width, transform-inherit !default;\n\n// media list\n$fe-media-type: 'media', 'media-body';\n$fe-media-direction: left, right;\n\n// button\n$fe-button-radius-styles: 'radius', 'round' !default;\n$fe-button-radius: 0.45em !default;\n$fe-button-round: 1000px !default;\n$fe-button-hover-lightness: 10% !default;\n\n// visibility\n$fe-even: 2 4 6 8 10 12 14 16 18 20;\n$fe-odd: 1 3 5 7 9 11 13 15 17 19;\n","// *** function *** //\n\n// em\n@function em($pxval, $base: $fe-em-base) {\n  @if unit($pxval) == 'em' or unit($pxval) == 'rem' { @return $pxval; }\n  @else {\n    @if unit($pxval) == 'px' or unitless($pxval) { $pxval: strip-unit($pxval); }\n    @if unit($base) == 'px' or unitless($base) { $base: strip-unit($base); }\n    @return ($pxval / $base) * 1em;\n  } \n}\n\n// rem\n@function rem($pxval, $base: $fe-rem-base) {\n  @if unit($pxval) == 'rem' or unit($pxval) == 'em' { @return $pxval; }\n  @else {\n    @if unit($pxval) == 'px' or unitless($pxval) { $pxval: strip-unit($pxval); }\n    @if unit($base) == 'px' or unitless($base) { $base: strip-unit($base); }\n    @return ($pxval / $base) * 1rem;\n  } \n}\n\n// strip-unit\n@function strip-unit($val) {\n  @return ($val / ($val * 0 + 1));\n}\n\n// opposite\n@function opposite($direction){\n  @if $direction == left { \n    @return right; \n  } @else if $direction == right { \n    @return left; \n  } @else if $direction == top { \n    @return bottom; \n  } @else if $direction == bottom { \n    @return top; \n  } @else { \n    @return false; \n  }\n}\n\n// reject\n@function reject($list, $val){\n  $_return: ();\n\n  @if type-of($list) == 'list' {\n    @for $i from 1 through length($list) {\n      @if nth($list, $i) != $val {\n        $_return: append($_return, nth($list, $i));\n      }\n    }\n  } @else {\n    $_return: $list;\n  }\n\n  @return $_return;\n}\n\n// ro-get\n@function ro-get($key, $arg, $def:false){\n  $_return: $def;\n\n  @if type-of($arg) == 'string' {\n    @if index($key, $arg) {\n      $_return: true;\n    } \n  } @else if type-of($arg) == 'list' {\n    @each $item in $arg {\n      @if index($key, $item) {\n        $_return: $item;\n      } \n    }\n  }\n\n  @return $_return;\n}\n\n// ro-get-type\n@function ro-get-type($key, $arg, $check:false, $def:false) {\n  $_return: $def;\n\n  @each $item in $key {\n    @if type-of($item) == $arg {\n      @if $check {\n        @if not index($check, $item) {\n          $_return: $item;\n        }\n      } @else {\n        $_return: $item;\n      }\n    }\n  }\n\n  @return $_return;\n}\n\n// ro-get-prev\n@function ro-get-prev($list, $val, $def:false) {\n  $this-index: index($list, $val);\n  @if $this-index {\n    @return nth($list, ($this-index - 1));\n  } @else {\n    @return $def;\n  }\n}\n\n// ro-get-next\n@function ro-get-next($list, $val, $def:false) {\n  $this-index: index($list, $val);\n  @if $this-index {\n    @return nth($list, ($this-index + 1));\n  } @else {\n    @return $def;\n  }\n}\n\n// selector functions\n@function selector-str(){\n  $sel: &;\n  $sel-str: (nth($sel, 1) + '');\n\n  @return $sel-str;\n}\n@function selector-str-sliced($len){\n  @return str-slice(selector-str(), $len, str-length(selector-str())) + ', ';\n}\n@function str-remove-comma($key){\n  @return str-slice($key, 1, (str-length($key) - 2));\n}\n\n\n// plus-one\n@function plus-one ($key) {\n  @if type-of($key) == 'number' {\n    @if unitless($key) {\n      $key: $key + 1;\n    } @else if unit($key) == 'px' {\n      $key: $key + 1px;\n    } @else if unit($key) == 'em' {\n      $key: $key + em(1);\n    } @else if unit($key) == 'rem' {\n      $key: $key + rem(1);\n    }\n  }\n\n  @return $key;\n}\n\n// minus-one\n@function minus-one ($key) {\n  @if type-of($key) == 'number' {\n    @if unitless($key) {\n      $key: $key - 1;\n    } @else if unit($key) == 'px' {\n      $key: $key - 1px;\n    } @else if unit($key) == 'em' {\n      $key: $key - em(1);\n    } @else if unit($key) == 'rem' {\n      $key: $key - rem(1);\n    }\n  }\n\n  @return $key;\n}\n\n// str-cut\n@function str-cut($string, $separator, $position) {\n  $i: 1;\n  $final-string: '';\n  $length: str-length($string);\n\n  @if str-index($string, $separator) {\n    $i: str-index($string, $separator);\n    @if $position == after {\n      $i: $i + 1;\n      $final-string: str-slice($string, $i, $length);\n    } @else if $position == before {\n      $i: $i - 1;\n      $final-string: str-slice($string, 1, $i);\n    }\n  } @else {\n    $final-string: $string;\n  }\n\n  @return $final-string;\n}\n\n// span-calc\n@function span-calc ($col, $cols, $gutter){\n  $_return: '';\n\n  $col-percentage: percentage($col / $cols);\n  $col-gutter: ($gutter * $col / $cols);\n  $_return: '#{$col-percentage}' + ' + ' + '#{$col-gutter}';\n  @return $_return;\n}\n\n@function args-get-prev($list, $val, $default:false) {\n  @if type-of($list) == 'list' {\n    $index: index($list, $val);\n\n    @if $index {\n      @if $index >= 2 {\n        @return nth($list, ($index - 1));\n      } @else {\n        \n        @return $default;\n      }\n    } @else {\n\n      @return $default;\n    }\n  } @else {\n\n    @return $default;\n  }\n}\n\n@function args-get-next($list, $val, $default:false) {\n  @if type-of($list) == 'list' {\n    $index: index($list, $val);\n\n    @if $index {\n      @if length($list) >= ($index + 1) {\n        @return nth($list, ($index + 1));\n      } @else {\n        \n        @return $default;\n      }\n    } @else {\n\n      @return $default;\n    }\n  } @else {\n\n    @return $default;\n  }\n}\n\n","// *** placeholder *** //\n%layout-base {\n  // &, > tbody, > tbody > tr {text-align: $gallery-align; }\n  font-size: 0; // remove blank space between inline-block elements\n  // Webkit: collapse white-space between units\n  letter-spacing: -0.31em; \n  // Webkit: fixes text-rendering: optimizeLegibility\n  text-rendering: optimizespeed; \n  // Sets the font stack to fonts known to work properly with the above letter\n  // and word spacings. See: https://github.com/yahoo/pure/issues/41/\n  // The following font stack makes gallery work on all known environments.\n  // * FreeSans: Ships with many Linux distros, including Ubuntu\n  // * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and\n  //   Arial to get picked up by the browser, even though neither is available\n  //   in Chrome OS.\n  // * Droid Sans: Ships with all versions of Android.\n  // * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.\n  font-family: FreeSans, Arimo, \"Droid Sans\", Helvetica, Arial, sans-serif;\n\n  // Opera as of 12 on Windows needs word-spacing.\n  // The \".opera-only\" selector is used to prevent actual prefocus styling\n  // and is not required in markup.\n  .opera-only :-o-prefocus, & { word-spacing: -0.43em; }\n}\n%layout-item-base {\n  display: inline-block;\n  font-size: 16px; // restore font-size\n  letter-spacing: 0; // restore letter-spacing\n}\n","// *** breakpoint *** //\n@mixin ro-breakpoint($key){\n  $condition: args-get($key, ('min' 'max'), 'min');\n  $media-type: args-get($key, $ro-media-type);\n  $media-feature: args-get($key, $ro-media-features, 'width');\n\n  $media-string: if($media-type, '#{$media-type} and ', '');\n  $selector: '';\n  $bps-em: ();\n\n  // get breakpoints\n  @each $item in $key {\n    @if type-of($item) == 'number' {\n      @if strip-unit($item) == 0 {\n        $item: 0em;\n      } @else {\n        $item: em($item);\n      }\n\n      $bps-em: append($bps-em, $item);\n    }\n  }\n  $length: length($bps-em);\n\n  @if $length == 1 {\n    $bp: if($breakpoint-fix and $condition == 'max', (nth($bps-em, 1) - em(1)), nth($bps-em, 1));\n    $selector: $media-string + '(#{$condition}-#{$media-feature}: #{$bp})';\n  } @else if $length >= 2 {\n    @for $i from 1 through $length {\n      @if number-odd-even($i) == 'odd' {\n        $selector: $selector + ', ' + $media-string + ' (min-#{$media-feature}: #{nth($bps-em, $i)})';\n      } @else if number-odd-even($i) == 'even' {\n        $bp-max: if($breakpoint-fix, (nth($bps-em, $i) - em(1)), nth($bps-em, $i));\n        $selector: $selector + 'and (max-#{$media-feature}: #{$bp-max})';\n      }\n    }\n    // remove the first ', '\n    @if str-index($selector, ', ') == 1 { $selector: str-slice($selector, 3); }\n  }\n\n  // *** output *** //\n  @media #{unquote($selector)} { @content; }\n}\n\n@mixin bp($key) {\n  @include ro-breakpoint($key) {\n    @content;\n  };\n}","@import \"breakpoint\";\n\n// *** visible *** //\n@mixin visible($key){\n  $new-key: ();\n\n  @if type-of($key) == 'number' {\n    @include bp('max' $key) { display: none !important; }\n  } @else if type-of($key) == list {\n    @if nth($key, 1) == 0 {\n      $key: list-remove($key, 0);\n    } @else {\n      $new-key: append($new-key, 0);\n    }\n\n    // append $key to $new-key \n    @each $item in $key {\n      $new-key: append($new-key, $item);\n    }\n\n    @include bp($new-key) { display: none !important; }\n  }\n}\n","@import \"breakpoint\";\n\n// *** hidden *** //\n@mixin hidden($key){\n  @if type-of($key) == 'number' {\n    @include bp('min' $key) { display: none !important; }\n  } @else if type-of($key) == list {\n    @include bp($key) { display: none !important; }\n  }\n}\n","// *** type *** //\n@mixin type($key){\n  $check: join(join(join($fe-font-weights, $fe-font-styles), $fe-text-aligns), $fe-text-transforms);\n\n  // set up font-size, font-weight, line-height\n  $font-size: null;\n  $font-weight: null;\n  $line-height: null;\n  @each $item in $key {\n    @if type-of($item) == 'number' {\n      @if unitless($item) {\n        @if $item >= 100 {\n          $font-weight: $item;\n        } @else {\n          $line-height: $item;\n        }\n      } @else {\n        $font-size: $item;\n      }\n    }\n  }\n\n  // set up font-family, font-weight, font-style, text-align, text-transform\n  $font-family: ro-get-type($key, 'string', $check);\n  $font-weight: ro-get($key, $fe-font-weights); \n  $font-style: ro-get($key, $fe-font-styles);\n  $text-align: ro-get($key, $fe-text-aligns);\n  $text-transform: ro-get($key, $fe-text-transforms);\n\n  // remove prefix\n  @if type-of($font-weight) == 'string' {\n    $font-weight: str-cut($font-weight, '-', after);\n  }\n  @if type-of($font-style) == 'string' {\n    $font-style: str-cut($font-style, '-', after);\n  }\n  @if type-of($text-align) == 'string' {\n    $text-align: str-cut($text-align, '-', after);\n  }\n  @if type-of($text-transform) == 'string' {\n    $text-transform: str-cut($text-transform, '-', after);\n  }\n\n\n  // *** output *** //\n  @if $font-size {\n    font-size: $font-size;\n    @if unit($font-size) == 'px' {\n      font-size: rem($font-size);\n    }\n  }\n  @if $line-height {\n    line-height: $line-height;\n  }\n  @if $font-weight {\n    font-weight: $font-weight;\n  }\n  @if $font-style {\n    font-style: $font-style;\n  }\n  @if $text-align {\n    text-align: $text-align;\n  }\n  @if $text-transform {\n    text-transform: $text-transform;\n  }\n  @if $font-family {\n    font-family: unquote($font-family);\n  }\n}\n","// *** reset *** //\n\nbody{ // Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design.\n  width:100% !important;\n  min-width: 100%;\n  height: auto;\n  -webkit-text-size-adjust:100%;\n  -ms-text-size-adjust:100%;\n  margin:0;\n  padding:0;\n}\n// Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design. \n.ExternalClass {width:100%;} // Force Hotmail to display emails at full width\n.ExternalClass { // Force Hotmail to display normal line spacing.  More on that: http://www.emailonacid.com/forum/viewthread/43/\n  &,\n  & p, \n  & span, \n  & font, \n  & td, \n  & div {line-height: 100%;} \n} \n#backgroundTable {margin:0; padding:0; width:100% !important; line-height: 100% !important;}\n\ndiv, p, a, li, td { -webkit-text-size-adjust: none; } // Override the minimum font size on the iPhone and iPad\np {margin: 1em 0;} // Yahoo paragraph fix: removes the proper spacing or the paragraph (p) tag. To correct we set the top/bottom margin to 1em in the head of the document. Simple fix with little effect on other styling. NOTE: It is also common to use two breaks instead of the paragraph tag but I think this way is cleaner and more semantic. NOTE: This example recommends 1em. More info on setting web defaults: http://www.w3.org/TR/CSS21/sample.html or http://meiert.com/en/blog/20070922/user-agent-style-sheets/\ntd { text-align: left; }\ntable, tr, td {\n  padding: 0;\n  vertical-align: top;\n}\ntable { // Remove spacing around Outlook 07, 10 tables\n  border-spacing: 0;\n  border-collapse: collapse;\n  mso-table-lspace:0pt;\n  mso-table-rspace:0pt;\n  width: 100%;\n  &.body {\n    height: 100%;\n    center { width: 100%; }\n  }\n}\ntd {\n  margin: 0;\n  word-break: break-word;\n  -webkit-hyphens: auto;\n  -moz-hyphens: auto;\n  hyphens: auto;\n  border-collapse: collapse !important; // Outlook 07, 10 Padding issue: These \"newer\" versions of Outlook add some padding around table cells potentially throwing off your perfectly pixeled table.  The issue can cause added space and also throw off borders completely.  Use this fix in your header or inline to safely fix your table woes.\n  // More info: http://www.ianhoar.com/2008/04/29/outlook-2007-borders-and-1px-padding-on-table-cells/\n  // http://www.campaignmonitor.com/blog/post/3392/1px-borders-padding-on-table-cells-in-outlook-07/\n}\nimg {\n  outline:none;\n  text-decoration: none;\n  -ms-interpolation-mode: bicubic; // \"-ms-interpolation-mode: bicubic\" works to help ie properly resize images in IE. (if you are resizing them using the width and height attributes)\n  max-width: 100%;\n  a & { border: none; } // \"border:none\" removes border when linking images.\n}\n.img-fix { display: block; } // Updated the common Gmail/Hotmail image display fix: Gmail and Hotmail unwantedly adds in an extra space below images when using non IE browsers. You may not always want all of your images to be block elements. Apply the \"image_fix\" class to any image you need to fix.\nhr {\n  // margin-left: ($gutter / 2);\n  // margin-right: ($gutter / 2);\n  margin: 0;\n  height: 1px;\n  color: map-get($color, border);\n  background-color: map-get($color, border);\n  border: none;\n}\nh1,h2,h3,h4,h5,h6{\n  display:block;\n  margin:0;\n  padding:0;\n  color: black !important; // Hotmail header color reset: Hotmail replaces your header color styles with a green color on H2, H3, H4, H5, and H6 tags. In this example, the color is reset to black for a non-linked header, blue for a linked header, red for an active header (limited support), and purple for a visited header (limited support).  Replace with your choice of color. The !important is really what is overriding Hotmail's styling. Hotmail also sets the H1 and H2 tags to the same size.\n  a { \n    color: blue !important; \n    &:active { color: red !important; } // Preferably not the same color as the normal header link color.  There is limited support for psuedo classes in email clients, this was added just for good measure.\n    &:visited { color: purple !important; } // Preferably not the same color as the normal header link color. There is limited support for psuedo classes in email clients, this was added just for good measure. \n  }\n}\n.full { width: 100%; }\n\n/* Typography */\n#outlook p { display: inline !important; }\n#outlook a { padding:0; } // Force Outlook to provide a \"view in browser\" menu link.\nbody, table.body {\n  color: #222222;\n  font-family: Helvetica, Arial, sans-serif;\n}\nsmall { font-size: 10px; }\na {\n  color: map-get($color, link);\n  text-decoration: none;\n  &[href^=tel],\n  &[href^=sms]{\n    color:inherit;\n    cursor:default;\n    text-decoration:none;\n  }\n}\np,a,li,td,blockquote { mso-line-height-rule:exactly; }\np,a,li,td,body,table,blockquote{\n  -ms-text-size-adjust:100%;\n  -webkit-text-size-adjust:100%;\n}\n\n/* Alignment */\n.center { \n  &,\n  table &, \n  td &, \n  h1 &, \n  h2 &, \n  h3 &, \n  h4 &, \n  h5 &, \n  h6 &, \n  p &, \n  span & {\n    text-align: center;\n  }\n}\nspan.center {\n  display: block;\n  text-align: center;\n}\nimg.center {\n  margin: 0 auto;\n  float: none;\n}","// *** wrapper *** //\n\n// wrapper\ntable {\n  // &.body center { min-width: $wrapper; } // Force gmail (App) show desktop version\n  &.wrapper {\n    max-width: $wrapper;\n    // width: $wrapper; // Force gmail (App) show desktop version\n    margin: 0 auto;\n    text-align: inherit;\n  }\n\n  // For Apple Mail (it doesn't support max-width) \n  // @include bp(max $wrapper) { \n    // &[class=\"wrapper\"] { width: 92% !important;  }  \n    // &[class=\"body\"] center { min-width: 0 !important; }\n  // }\n  @include bp(min ($wrapper + 1px)) { \n    &[class=\"wrapper\"] { width: $wrapper !important;  }  \n  }\n}","// *** row *** //\n\n// row\n.row { \n  width: 100%;\n  font-size: 0; // remove blank space between inline-block elements\n  // Webkit: collapse white-space between units\n  letter-spacing: -0.31em; \n  // Webkit: fixes text-rendering: optimizeLegibility\n  text-rendering: optimizespeed; \n  // Sets the font stack to fonts known to work properly with the above letter\n  // and word spacings. See: https://github.com/yahoo/pure/issues/41/\n  // The following font stack makes gallery work on all known environments.\n  // * FreeSans: Ships with many Linux distros, including Ubuntu\n  // * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and\n  //   Arial to get picked up by the browser, even though neither is available\n  //   in Chrome OS.\n  // * Droid Sans: Ships with all versions of Android.\n  // * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.\n  font-family: FreeSans, Arimo, \"Droid Sans\", Helvetica, Arial, sans-serif;\n\n  // Opera as of 12 on Windows needs word-spacing.\n  // The \".opera-only\" selector is used to prevent actual prefocus styling\n  // and is not required in markup.\n  .opera-only :-o-prefocus, & { word-spacing: -0.43em; }\n}\n","// *** col *** //\n\n@mixin col($key){\n  // merge list items\n  @each $item in $key {\n    @if type-of($item) == 'list' {\n      $key: join($item, reject($key, $item), 'space');\n    }\n  }\n  \n  $cols: ro-get-next($key, 'of', $cols);\n  $gutter: $gutter;\n\n  // set up column\n  $col: 0;\n  @if type-of($key) == 'number' {\n    $col: $key;\n  } @else if type-of($key) == 'list' {\n    @if index($key, 'of') {\n      $col: ro-get-prev($key, 'of');\n    } @else {\n      @each $item in $key {\n        @if type-of($item) == 'number' and\n            unitless($item) {\n          $col: $item;\n        }\n      }\n    }\n  }\n\n  // set up gutter\n  @each $item in $key {\n    @if type-of($item) == 'number' and \n        not unitless($item) {\n      $gutter: $item;\n    }\n  }\n  // strip unit when gutter == 0\n  @if strip-unit($gutter) == 0 {\n    $gutter: 0;\n  }\n  \n  $px_width: ($col * $content / $cols);\n  $percent_width: percentage($col / $cols);\n\n  // desktop, non-mediaquery\n  @extend %col;\n  min-width: $px_width;\n  min-width: -webkit-calc(#{$percent_width});\n  min-width: calc(#{$percent_width});\n  width: $percent_width;\n  width: -webkit-calc(#{$content * $faciend} - #{100% * $faciend});\n  width: calc(#{$content * $faciend} - #{100% * $faciend});\n  max-width: 100%;\n}\n\n%col {\n  display: inline-block;\n  font-size: 16px; // restore font-size\n  letter-spacing: 0; // restore letter-spacing\n  // padding: ($gutter / 2);\n\n  // mediaquery\n  @include bp(max $wrapper) {\n    width: 100% !important;\n    box-sizing: border-box;\n  }\n}\n\n// generate css\n@if $generate-css {\n  .col {\n    padding: ($gutter / 2);\n    @for $i from 1 through $cols {\n      &-#{$i} {\n        @include col($i of $cols);\n      }\n    }\n  }\n}\n","// *** sub-col *** //\n\n// sub col\n@mixin sub-col($key){\n  $cols: ro-get-next($key, 'of', $cols);\n\n  // set up column\n  $column: 0;\n  @if type-of($key) == 'number' {\n    $column: $key;\n  } @else if type-of($key) == 'list' {\n    @if index($key, 'of') {\n      $column: ro-get-prev($key, 'of');\n    } @else {\n      @each $item in $key {\n        @if type-of($item) == 'number' and\n            unitless($item) {\n          $column: $item;\n        }\n      }\n    }\n  }\n  \n  width: percentage($column / $cols);\n}","// *** gallery *** //\n\n@mixin gallery($key) {\n  $count: 1;\n  $row: $content;\n\n  // set up per-row, gallery-row\n  @if type-of($key) == 'number' {\n    $count: $key;\n  } @else if type-of($key) == 'list' {\n    @each $item in $key {\n      @if type-of($item) == 'number' {\n        @if unitless($item) {\n          $count: $item;\n        } @else {\n          $row: $item;\n        }\n      }\n    }\n  }\n\n  $px_width: ($row / $count);\n  $percent_width: percentage(1 / $count);\n\n  @extend %layout-base;\n  > tbody > tr > td {\n    @extend %layout-item-base;\n    min-width: $px_width;\n    width: $percent_width;\n    min-width: -webkit-calc(#{$percent_width});\n    min-width: calc(#{$percent_width});\n    width: -webkit-calc(#{$row * $faciend} - #{100% * $faciend});\n    width: calc(#{$row * $faciend} - #{100% * $faciend});\n    max-width: 100%;\n  }\n\n  // constrict the images to container width\n  img { max-width: $px_width; }\n}\n\n\n@if $generate-css {\n  .gallery {\n    @for $i from 2 through $gallery-cols {\n      &-#{$i} {\n        @include gallery($i center);\n      }\n    }\n  }\n}\n\n@mixin gallery2($key) {\n  $count-mobile: false;\n  $count-desktop: false;\n  $bp: false;\n\n  @if index($key, 'to') {\n    $count-mobile: args-get-prev($key, 'to');\n    $count-desktop: args-get-next($key, 'to');\n  }\n  @each $item in $key {\n    @if not $bp and type-of($item) == 'number' and not unitless($item) {\n      $bp: $item;\n    }\n  }\n  \n  // set default values\n  @if not $bp { $bp: $content; }\n  @if not $count-mobile { $count-mobile: 1; }\n  @if not $count-desktop { $count-desktop: 2; }\n\n  // get width\n  $width-mobile: percentage(1 / $count-mobile);\n  $width-desktop: percentage(1 / $count-desktop);\n\n  @extend %layout-base;\n  > tbody > tr > td {\n    @extend %layout-item-base;\n\n    // 1. For Lotus Notes, Outlook for Windows, Outlook Web App (both Office 365 and the new Outlook.com) and Yahoo (webmail, iOS and Android apps). They don't support calc.\n    // 2. For older versions of Android (5.0-) and iOS (iOS7-)\n\n    min-width: ($bp / $count-desktop); // 1\n    width: $width-desktop; // 1\n\n    max-width: $width-mobile; // for mobile\n    min-width: -webkit-calc(#{$width-desktop}); // 2\n    min-width: calc(#{$width-desktop}); // for desktop\n    width: -webkit-calc(#{$bp * $faciend} - #{$width-mobile * $faciend}); // 2\n    width: calc(#{$bp * $faciend} - #{$width-mobile * $faciend}); // breakpoint magic\n  }\n}","// *** buttons *** //\n\n@mixin button ($key){\n  $background-color: ro-get-type($key, 'color', false, '#3ab7e4');\n  $padding: ro-get-type($key, 'string', $fe-button-radius-styles, '15px 20px');\n  $radius: ro-get($key, $fe-button-radius-styles, false);\n\n  display: inline-block;\n  border-style: solid;\n  text-align: center;\n  box-sizing: border-box;\n\n  // background-color\n  @if $background-color {\n    background-color: $background-color;\n    border-color: $background-color;\n    border-type: solid;\n    color: contrast($background-color);\n  }\n\n  // padding\n  @if $padding { border-width: unquote($padding); }\n\n  // border-radius\n  @if $radius == 'radius' { \n    border-radius: $fe-button-radius; \n  } @else if $radius == 'round' {\n    border-radius: $fe-button-round;\n  }\n\n}\n"],"names":[],"mappings":"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"}